using Fjord.Mesa;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable UnusedMember.Local
namespace BlogEngine.CoreDomain
{
    #region Generated by Lokad Code DSL
    
        
    
    [DataContract(Namespace = "Fjord/BlogEngine")]
    public partial class StartBlog : Command, IBlogCommand
    {
        [DataMember(Order = 1)] public BlogId Id { get; private set; }
        [DataMember(Order = 2)] public string Name { get; private set; }
        [DataMember(Order = 3)] public string Author { get; private set; }
        
        StartBlog () {}
        public StartBlog (BlogId id, string name, string author)
        {
            Id = id;
            Name = name;
            Author = author;
        }
        
        public override string ToString()
        {
            return string.Format(@"Start blog {0}", Name);
        }
    }
    
        
    
    [DataContract(Namespace = "Fjord/BlogEngine")]
    public partial class BlogStarted : Event, IBlogEvent
    {
        [DataMember(Order = 1)] public BlogId Id { get; private set; }
        [DataMember(Order = 2)] public string Name { get; private set; }
        [DataMember(Order = 3)] public DateTime TimeUtc { get; private set; }
        [DataMember(Order = 4)] public string Author { get; private set; }
        
        BlogStarted () {}
        public BlogStarted (BlogId id, string name, DateTime timeUtc, string author)
        {
            Id = id;
            Name = name;
            TimeUtc = timeUtc;
            Author = author;
        }
        
        public override string ToString()
        {
            return string.Format(@"Blog {0} started by {2} at {1}", Name, TimeUtc, Author);
        }
    }
    
        
    
    [DataContract(Namespace = "Fjord/BlogEngine")]
    public partial class SubmitStory : Command, IBlogCommand
    {
        [DataMember(Order = 1)] public BlogId Id { get; private set; }
        [DataMember(Order = 2)] public string Author { get; private set; }
        [DataMember(Order = 3)] public string Title { get; private set; }
        [DataMember(Order = 4)] public string Body { get; private set; }
        
        SubmitStory () {}
        public SubmitStory (BlogId id, string author, string title, string body)
        {
            Id = id;
            Author = author;
            Title = title;
            Body = body;
        }
        
        public override string ToString()
        {
            return string.Format(@"Submit story {1} by {0}", Author, Title);
        }
    }
    
        
    
    [DataContract(Namespace = "Fjord/BlogEngine")]
    public partial class StorySubmitted : Event, IBlogEvent
    {
        [DataMember(Order = 1)] public BlogId Id { get; private set; }
        [DataMember(Order = 2)] public string Author { get; private set; }
        [DataMember(Order = 3)] public string Title { get; private set; }
        [DataMember(Order = 4)] public string Body { get; private set; }
        
        StorySubmitted () {}
        public StorySubmitted (BlogId id, string author, string title, string body)
        {
            Id = id;
            Author = author;
            Title = title;
            Body = body;
        }
        
        public override string ToString()
        {
            return string.Format(@"Story {1} submitted by {0}", Author, Title);
        }
    }
    
        
    
    [DataContract(Namespace = "Fjord/BlogEngine")]
    public partial class CreateStoryFromBlog : Command, IStoryCommand
    {
        [DataMember(Order = 1)] public StoryId Id { get; private set; }
        [DataMember(Order = 2)] public BlogId BlogId { get; private set; }
        [DataMember(Order = 3)] public string Author { get; private set; }
        [DataMember(Order = 4)] public string Title { get; private set; }
        [DataMember(Order = 5)] public string Body { get; private set; }
        
        CreateStoryFromBlog () {}
        public CreateStoryFromBlog (StoryId id, BlogId blogId, string author, string title, string body)
        {
            Id = id;
            BlogId = blogId;
            Author = author;
            Title = title;
            Body = body;
        }
        
        public override string ToString()
        {
            return string.Format(@"Create story {2} from {0} by {1}", BlogId, Author, Title);
        }
    }
    
        
    
    [DataContract(Namespace = "Fjord/BlogEngine")]
    public partial class StoryCreatedFromBlog : Event, IStoryEvent
    {
        [DataMember(Order = 1)] public StoryId Id { get; private set; }
        [DataMember(Order = 2)] public BlogId BlogId { get; private set; }
        [DataMember(Order = 3)] public string Author { get; private set; }
        [DataMember(Order = 4)] public DateTime TimeUtc { get; private set; }
        [DataMember(Order = 5)] public string Title { get; private set; }
        [DataMember(Order = 6)] public string Body { get; private set; }
        
        StoryCreatedFromBlog () {}
        public StoryCreatedFromBlog (StoryId id, BlogId blogId, string author, DateTime timeUtc, string title, string body)
        {
            Id = id;
            BlogId = blogId;
            Author = author;
            TimeUtc = timeUtc;
            Title = title;
            Body = body;
        }
        
        public override string ToString()
        {
            return string.Format(@"Story {3} created from {0} submitted at {2} by {1}", BlogId, Author, TimeUtc, Title);
        }
    }
    
    public interface IStoryApplicationService
    {
        void When(CreateStoryFromBlog c);
    }
    
    public interface IStoryState
    {
        void When(StoryCreatedFromBlog e);
    }
    
    public interface IBlogApplicationService
    {
        void When(StartBlog c);
        void When(SubmitStory c);
    }
    
    public interface IBlogState
    {
        void When(BlogStarted e);
        void When(StorySubmitted e);
    }
    #endregion
}
